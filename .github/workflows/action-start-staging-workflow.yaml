name: Staging CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [staging]

jobs:
  playwright:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # we need history for diffs

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Setup project dependencies
        run: npm ci

      - name: Get Playwright version
        id: get-pw-version
        run: echo "version=$(npx playwright --version | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ steps.get-pw-version.outputs.version }}
          restore-keys: |
            playwright-browsers-${{ steps.get-pw-version.outputs.version }}
            playwright-browsers-

      - name: Install Playwright browsers if cache missed
        if: ${{ steps.pw-cache.outputs.cache-hit != 'true' }}
        run: npx playwright install --with-deps --only-shell chromium

      - name: Fetch target branch for diff
        run: git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: Run @a11y, @interactions, @visual tests
        run: npm run pw:ct -- --grep-invert @sanity --only-changed=${{ github.base_ref }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && failure() }}
        with:
          if-no-files-found: 'ignore'
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  versioning:
    environment: staging
    name: Staging versioning
    needs: playwright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - run: npm ci
      - run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
