/* eslint-disable sort-keys */
import type { Linter } from 'eslint'

const ts: Linter.RulesRecord = {
  // Problems
  'array-callback-return': 'error',
  'getter-return': 'error',
  'no-compare-neg-zero': 'error',
  'no-cond-assign': 'error',
  'no-const-assign': 'error',
  'no-constant-condition': 'error',
  'no-constructor-return': 'error',
  'no-control-regex': 'error',
  'no-dupe-args': 'error',
  'no-dupe-class-members': 'error',
  'no-dupe-else-if': 'error',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-duplicate-imports': 'error',
  'no-func-assign': 'error',
  'no-import-assign': 'error',
  'no-invalid-regexp': 'error',
  'no-irregular-whitespace': 'error',
  'no-obj-calls': 'error',
  'no-prototype-builtins': 'error',
  'no-self-assign': 'error',
  'no-self-compare': 'error',
  'no-setter-return': 'error',
  'no-template-curly-in-string': 'error',
  'no-this-before-super': 'error',
  'no-unassigned-vars': 'error',
  'no-unexpected-multiline': 'error',
  'no-unmodified-loop-condition': 'error',
  'no-unreachable': 'error',
  'no-unreachable-loop': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  'no-unsafe-optional-chaining': 'error',
  'no-unused-private-class-members': 'error',
  'no-unused-vars': [
    'error',
    { argsIgnorePattern: '^_', varsIgnorePattern: '^_' }
  ],
  'no-use-before-define': 'error',
  'no-useless-assignment': 'error',
  'no-useless-backreference': 'error',
  'require-atomic-updates': 'error',
  'valid-typeof': 'error',

  // Suggestions
  'accessor-pairs': 'warn',
  'arrow-body-style': ['error', 'as-needed'],
  'block-scoped-var': 'error',
  camelcase: ['warn', { ignoreDestructuring: true }],
  'default-case': 'error',
  'default-case-last': 'error',
  'default-param-last': 'error',
  'dot-notation': 'error',
  eqeqeq: 'error',
  'func-name-matching': 'error',
  'func-names': ['error', 'as-needed'],
  'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
  'grouped-accessor-pairs': 'error',
  'guard-for-in': 'error',
  'init-declarations': ['error', 'always'],
  'max-classes-per-file': ['error', 1],
  'no-case-declarations': 'error',
  'no-else-return': 'error',
  'no-extra-bind': 'error',
  'no-extra-boolean-cast': 'error',
  'no-implicit-coercion': 'error',
  'no-invalid-this': 'error',
  'no-labels': 'error',
  'no-lone-blocks': 'error',
  'no-lonely-if': 'error',
  'no-multi-assign': 'error',
  'no-multi-str': 'warn',
  'no-negated-condition': 'error',
  'no-nested-ternary': 'error',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-wrappers': 'error',
  'no-object-constructor': 'error',
  'no-param-reassign': 'error',
  'no-redeclare': 'error',
  'no-sequences': 'error',
  'no-throw-literal': 'error',
  'no-undef-init': 'error',
  'no-undefined': 'off',
  'no-unneeded-ternary': 'error',
  'no-useless-call': 'error',
  'no-useless-constructor': 'error',
  'no-useless-escape': 'error',
  'no-useless-rename': 'error',
  'no-useless-return': 'error',
  'no-var': 'error',
  'prefer-const': 'error',
  'prefer-exponentiation-operator': 'error',
  'prefer-named-capture-group': 'error',
  'prefer-object-has-own': 'error',
  'prefer-object-spread': 'error',
  'prefer-regex-literals': 'error',
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  'require-await': 'error',
  'require-yield': 'error',
  'sort-keys': 'warn',
  yoda: 'error'
} as const

export default ts
